coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
sum(coverB_filt_flat[4,5:60])
mutate(coverB_filt_flat, row_total = sum(coverB_filt_flat[,5:60])) %>% str()
coverB_filt_flat<-mapply(function (x) {mutate(coverB_filt_flat, row_total = sum(x[,5:60]))}
coverB_filt_flat<-mapply(function (x) {mutate(coverB_filt_flat, row_total = sum(x[,5:60]))})
coverB_filt_flat<-mapply(function (x) {mutate(coverB_filt_flat, row_total = sum(x[,5:60]))})
coverB_filt_flat
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(function (x) {mutate(coverB_filt_flat, row_total = sum(x[,5:60]))}) %>% as.data.frame()
coverB_filt_flat
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat
colnames(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {mutate(x, row_total = sum(x[,5:60]))}) %>% as.data.frame()
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(function (x) {mutate(x, row_total = sum(x[,5:60]))})
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(function (x) {mutate(x, row_total = sum(x[,5:60]))})
coverB_filt_flat
coverB_filt_flat<-sapply(function (x) {mutate(x, row_total = sum(x[,5:60]))})
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(function (x) {mutate(x, row_total = sum(x[,5:60]))}, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat
help(mutatet)
help(mutate)
coverB_filt_flat<-mapply(function (x) {x %>% mutate(row_total = sum(x[,5:60]))}, coverB_filt_flat)
coverB_filt_flat %>% summarise_at(5:60, sum)
coverB_filt_flat %>% summarise_at(5:60, sum) %>% view()
coverB_filt_flat %>% summarise_at(5:60, sum) %>% View()
#coverB_filt_flat<-mapply(function (x) {x %>% mutate(row_total = sum(x[,5:60]))}, coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
#coverB_filt_flat<-mapply(function (x) {x %>% mutate(row_total = sum(x[,5:60]))}, coverB_filt_flat)
coverB_filt_flat<-lapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt_flat<-lapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
#coverB_filt_flat<-mapply(function (x) {x %>% mutate(row_total = sum(x[,5:60]))}, coverB_filt_flat)
coverB_filt_flat<-apply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
tr(coverB_filt_flat)
str(coverB_filt_flat)
## Works to here str(coverB_filt_flat) ... 'data.frame':	56 obs. of  93 variables:
coverB_filt_flat %>% summarise_at(5:60, sum)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, rowsum}, coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, rowsum}, coverB_filt_flat))
mapply(function (x) {x %>% summarise_at(5:60, rowsum}, coverB_filt_flat))
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, rowsum)}, coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
lapply(coverB_filt_flat, class)
tst_fnc<-function (x) {x %>% summarise_at(5:60, sum)}
tst_fnc(coverB_filt_flat)
mapply(tst_fnc,coverB_filt_flat)
apply(coverB_filt_flat,tst_fnc)
lapply(coverB_filt_flat,tst_fnc)
tst_fnc<-function (x) {x %>% summarise_at(5:60, sum, na.rm = TRUE)}
lapply(coverB_filt_flat,tst_fnc)
mapply(coverB_filt_flat,tst_fnc)
mapply(tst_fnc,coverB_filt_flat)
help(apply)
apply(coverB_filt_flat,1,tst_fnc)
length(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
## Works to here str(coverB_filt_flat) ... 'data.frame':	56 obs. of  93 variables:
## One iteration of the function to sum rows of cover works ... coverB_filt_flat %>% summarise_at(5:60, sum)
length(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
length(coverB_filt_flat)
for (i in length(coverB_filt_flat))
coverB_filt_flat %>% summarise_at(i,5:60, sum)
for (i in length(coverB_filt_flat))
coverB_filt_flat %>% summarise(i,5:60, sum)
for (i in length(coverB_filt_flat))
summarise( coverB_filt_flat[i,5:60], sum)
for (i in length(coverB_filt_flat))
sum(coverB_filt_flat[i,5:60])
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
for (i in length(coverB_filt_flat))
sum(coverB_filt_flat[i,5:60])
str(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
## Works to here str(coverB_filt_flat) ... 'data.frame':	56 obs. of  93 variables:
## One iteration of the function to sum rows of cover works ... coverB_filt_flat %>% summarise_at(5:60, sum)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
for (i in length(coverB_filt_flat))
sum(coverB_filt_flat[i,5:60])
apply(coverB_filt_flat,1,tst_fnc)
stuff<-for (i in length(coverB_filt_flat))
sum(coverB_filt_flat[i,5:60])
stuff
for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60]) stuff
for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60])
stuff()
stuff
mutate(coverB_filt_flat, row_total = sum(coverB_filt_flat[,5:60])) %>% str()
summarise(coverB_filt_flat, row_total = sum(coverB_filt_flat[,5:60])) %>% str()
mapply(tst_fnc, coverB_filt_flat)
for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60])
for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60])
stuff
rownames(coverB_filt_flat)<-cat(coverB_filt_flat[,1:3]
)
cat(coverB_filt_flat[,1:3])
cat(coverB_filt_flat[1:3])
rownames(coverB_filt_flat)<-cat(coverB_filt_flat$Elevation,coverB_filt_flat$Transect)
rownames(coverB_filt_flat)
nrow(coverB_filt_flat)
cat(coverB_filt_flat[1:3])
cat(coverB_filt_flat$Elevation,coverB_filt_flat$Transect)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
## Make the species cover columns numeric
coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
str(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
coverB_filt$Cover<-as.character(coverB_filt$Cover)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
coverB_filt_flat<-as.data.frame(coverB_filt_flat)
## Make the species cover columns numeric but this makes everything numeric so no need for the row subscript
#coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat
str(coverB_filt_flat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60])
stuff
tst_fnc<-function (x) {x %>% summarise_at(5:60, sum, na.rm = TRUE)}
mapply(tst_fnc, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B')
## Trying to filter Env_Matrix_B by
## Select only transect B and turn cover into a character
coverB_filt<-subset(cover, Transect=='B') %>% str()
coverB_filt$Cover<-as.character(coverB_filt$Cover) %>% str()
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover)
str(coverB_filt)
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
str(coverB_filt)
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos)
str(coverB_filt)
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover)# %>% select(-V1) %>% select(Elevation, Transect, Quadrat)
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) #%>% select(Elevation, Transect, Quadrat)
str(coverB_filt_flat)
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
mapply(class, coverB_filt_flat)
mapply(range, coverB_filt_flat)
coverB_filt_flat<-as.tibble(coverB_filt_flat)
coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
## Make the species cover columns numeric but this makes everything numeric so no need for the row subscript
#coverB_filt_flat<-mapply(function (x) {as.numeric(x[5:60])}, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
str(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
## Make the species cover columns numeric but this makes everything numeric so no need for the row subscript
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0 # 'data.frame':	60 obs. of  92 variables:, all vars numeric
str(coverB_filt_flat)
help("rowsum")
rownames(coverB_filt_flat)
lapply(cat,coverB_filt_flat[,1:2])
lapply(coverB_filt_flat[,1:2],cat)
head(coverB_filt_flat)
head(coverB_filt_flat) %>% View()
lapply(coverB_filt_flat[,1:2],cat(sep="-"))
lapply(coverB_filt_flat[,1:2],cc)
lapply(coverB_filt_flat[,1:2],c)
unite(stuff,coverB_filt_flat$Elevation,coverB_filt_flat$Transect)
coverB_filt_flat$UID<-paste(coverB_filt_flat$Elevation, coverB_filt_flat$Transect, coverB_filt_flat$Quadrat, sep="_)"
coverB_filt_flat$UID<-paste(coverB_filt_flat$Elevation, coverB_filt_flat$Transect, coverB_filt_flat$Quadrat, sep="_")
head(coverB_filt_flat) %>% View()
coverB_filt_flat_forMDS<-select(coverB_filt_flat, -Elevation, -Transect, -Quadrat)
#coverB_filt_flat_forMDS<-coverB_filt_flat
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS<-sapply(coverB_filt_flat_forMDS, as.numeric) %>% as.data.frame()
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS$rowsums<-coverB_filt_flat_forMDS[,4:nrow(coverB_filt_flat_forMDS)] %>% rowSums()
coverB_filt_flat_forMDS<-cbind(coverB_filt_flat_forMDS,as.data.frame(rowSums(coverB_filt_flat_forMDS)))
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS<-as.data.frame(coverB_filt_flat_forMDS)
coverB_filt_flat_forMDS<-rename(coverB_filt_flat_forMDS, tot_cov =`rowSums(coverB_filt_flat_forMDS)`)
coverB_filt_flat_forMDS<-coverB_filt_flat_forMDS %>% subset(rowsums>0) %>% select(-tot_cov)#subset(tot_cov>0)# %>% select(-tot_cov)
coverB_MDS<-metaMDS(coverB_filt_flat_forMDS, distance = "bray", try=100, trymax = 500)
coverB_MDS
coverB_MDS$points
rownames(coverB_filt_flat_forMDS)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
## Make the species cover columns numeric but this makes everything numeric so no need for the row subscript
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0 # 'data.frame':	60 obs. of  92 variables:, all vars numeric
rownames(coverB_filt_flat)<-coverB_filt_flat$UID
## Remove columns that aren't species to conform to input requirements for metaMDS
coverB_filt_flat_forMDS<-select(coverB_filt_flat, -Elevation, -Transect, -Quadrat)
#coverB_filt_flat_forMDS<-coverB_filt_flat
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
#coverB_filt_flat_forMDS<-sapply(coverB_filt_flat_forMDS, as.numeric) %>% as.data.frame()
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS$rowsums<-coverB_filt_flat_forMDS[,4:nrow(coverB_filt_flat_forMDS)] %>% rowSums()
coverB_filt_flat_forMDS<-cbind(coverB_filt_flat_forMDS,as.data.frame(rowSums(coverB_filt_flat_forMDS)))
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS<-as.data.frame(coverB_filt_flat_forMDS)
coverB_filt_flat_forMDS<-rename(coverB_filt_flat_forMDS, tot_cov =`rowSums(coverB_filt_flat_forMDS)`)
coverB_filt_flat_forMDS<-coverB_filt_flat_forMDS %>% subset(rowsums>0) %>% select(-tot_cov)#subset(tot_cov>0)# %>% select(-tot_cov)
coverB_filt_flat$UID<-paste(coverB_filt_flat$Elevation, coverB_filt_flat$Transect, coverB_filt_flat$Quadrat, sep="_")
rownames(coverB_filt_flat)<-coverB_filt_flat$UID
coverB_filt_flat<-coverB_filt_flat %>% select(-UID)
coverB_filt_flat_forMDS<-select(coverB_filt_flat, -Elevation, -Transect, -Quadrat)
#coverB_filt_flat_forMDS<-coverB_filt_flat
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
#coverB_filt_flat_forMDS<-sapply(coverB_filt_flat_forMDS, as.numeric) %>% as.data.frame()
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS$rowsums<-coverB_filt_flat_forMDS[,4:nrow(coverB_filt_flat_forMDS)] %>% rowSums()
coverB_filt_flat_forMDS<-cbind(coverB_filt_flat_forMDS,as.data.frame(rowSums(coverB_filt_flat_forMDS)))
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS<-as.data.frame(coverB_filt_flat_forMDS)
coverB_filt_flat_forMDS<-rename(coverB_filt_flat_forMDS, tot_cov =`rowSums(coverB_filt_flat_forMDS)`)
coverB_filt_flat_forMDS<-coverB_filt_flat_forMDS %>% subset(rowsums>0) %>% select(-tot_cov)#subset(tot_cov>0)# %>% select(-tot_cov)
rownames(coverB_filt_flat_forMDS)
Env_matrix_B %>% View()
coverB_MDS<-metaMDS(coverB_filt_flat_forMDS, distance = "bray", try=100, trymax = 500)
str(coverB_MDS)
coverB_MDS$points %>% View()
coverB_MDS$points %>% as.data.frame() %>% mutate(UID= rownames(coverB_MDS$points))
Env_matrix_B$UID<-paste(Env_matrix_B$Elevation, Env_matrix_B$Transect, Env_matrix_B$Quadrat, sep="_")
coverB_MDS$points %>% as.data.frame() %>% mutate(UID= rownames(coverB_MDS$points)) %>% inner_join(Env_matrix_B, by="UID")
#Need to filter Env_matrix to only have the 49 rows but now has rownames
stuff<-coverB_MDS$points %>% as.data.frame() %>% mutate(UID= rownames(coverB_MDS$points)) # %>% inner_join(Env_matrix_B, by="UID")
Env_matrix_B %>% inner_join(stuff, by="UID") %>% nrow()
Env_matrix_B$UID
str(Env_matrix_B$UID)
str(coverB_filt_flat$UID)
coverB_filt_flat$UID
rownames(coverB_filt_flat)
coverB_filt<-subset(cover, Transect=='B') ## 'data.frame':	342 obs. of  8 variables:, 7 factorss and 1 integer
coverB_filt$Cover<-as.character(coverB_filt$Cover) ## same dimensions, one var turned to char
##Replace "T" meaning trace cover values iwth a number
coverB_filt$Cover[coverB_filt$Cover=="T"]<-0.25
##Remove superfluous columns
coverB_filt <- coverB_filt %>% select(-Collection, -Long_Form, -Photos) #'data.frame':	342 obs. of  5 variables:, 1 integer, 3 factors and 1 char
##Spread data so columns are species, values are cover and rows are single quadrats
coverB_filt_flat<-coverB_filt %>% spread(Species, Cover) %>% select(-V1) # 'data.frame':	60 obs. of  92 variables: 1 integer, two factors, 89 chars
## Replace NAs with 0's and turn it into a dataframe
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0
## Make the species cover columns numeric but this makes everything numeric so no need for the row subscript
coverB_filt_flat<-mapply(as.numeric, coverB_filt_flat) %>% as.data.frame()
coverB_filt_flat[is.na(coverB_filt_flat)==T]<-0 # 'data.frame':	60 obs. of  92 variables:, all vars numeric
## Works to here str(coverB_filt_flat) ... 'data.frame':	56 obs. of  93 variables:
## One iteration of the function to sum rows of cover works ... coverB_filt_flat %>% summarise_at(5:60, sum)
##coverB_filt_flat<-mapply(function (x) {x %>% summarise_at(5:60, sum)}, coverB_filt_flat)
#### but this fails with this error ...
#### Error in UseMethod("tbl_vars") : no applicable method for 'tbl_vars' applied to an object of class "c('double', 'numeric')"
##
#### Tried a test function and apply but get the same error
##tst_fnc<-function (x) {x %>% summarise_at(5:60, sum, na.rm = TRUE)}
##mapply(tst_fnc, coverB_filt_flat)
##
#### Tried a loop but that yields a scalar  ... which I called stuff
##for (i in length(coverB_filt_flat)) stuff<-sum(coverB_filt_flat[i,5:60])
## Different approach. Create rownames that are UIDs
coverB_filt_flat$UID<-paste(coverB_filt_flat$Elevation, coverB_filt_flat$Quadrat, sep="_")
rownames(coverB_filt_flat)<-coverB_filt_flat$UID
coverB_filt_flat<-coverB_filt_flat %>% select(-UID)
## Remove columns that aren't species to conform to input requirements for metaMDS
coverB_filt_flat_forMDS<-select(coverB_filt_flat, -Elevation, -Transect, -Quadrat)
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS$rowsums<-coverB_filt_flat_forMDS[,4:nrow(coverB_filt_flat_forMDS)] %>% rowSums()
coverB_filt_flat_forMDS<-cbind(coverB_filt_flat_forMDS,as.data.frame(rowSums(coverB_filt_flat_forMDS)))
coverB_filt_flat_forMDS[is.na(coverB_filt_flat_forMDS)==T]<-0
coverB_filt_flat_forMDS<-as.data.frame(coverB_filt_flat_forMDS)
coverB_filt_flat_forMDS<-rename(coverB_filt_flat_forMDS, tot_cov =`rowSums(coverB_filt_flat_forMDS)`)
coverB_filt_flat_forMDS<-coverB_filt_flat_forMDS %>% subset(rowsums>0) %>% select(-tot_cov)#subset(tot_cov>0)# %>% select(-tot_cov)
coverB_MDS<-metaMDS(coverB_filt_flat_forMDS, distance = "bray", try=100, trymax = 500)
Env_matrix_B$UID<-paste(Env_matrix_B$Elevation, Env_matrix_B$Quadrat, sep="_")
#Need to filter Env_matrix to only have the 49 rows but now has rownames
stuff<-coverB_MDS$points %>% as.data.frame() %>% mutate(UID= rownames(coverB_MDS$points))
Env_matrix_B %>% inner_join(stuff, by="UID") %>% nrow()
rownames(coverB_filt_flat)
coverB_filt_flat$UID
str(Env_matrix_B$UID)
names_sp<-rownames(coverB_filt_flat)
names_env<-Env_matrix_B$UID
length( names_sp)
length( Env_matrix_B$UID)
cbind(names_env, names_sp)
head(coverB) %>% View()
coverB %>% count(Quadrat)
coverB %>% count(Env_matrix_B)
Env_matrix_B %>% count(Quadrat)
rownames(coverB_MDS$points)
savehistory("~/Documents/Personal_Lichenology/Chile Doc's/Stanton_Vargas_Fog/Data/Patache_Community/Patache/hist_20191101.Rhistory")
